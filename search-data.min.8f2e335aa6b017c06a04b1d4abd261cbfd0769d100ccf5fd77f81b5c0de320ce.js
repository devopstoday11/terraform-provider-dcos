(function(){const pages=[{"idx":0,"href":"/terraform-provider-dcos/docs/getting-started/","title":"Getting Started","content":""},{"idx":1,"href":"/terraform-provider-dcos/docs/getting-started/installation/","title":"Installation","content":" Installation There are various ways you can obtain the terraform-provider-dcs binary.\nAnd we are going to present them now.\n"},{"idx":2,"href":"/terraform-provider-dcos/docs/getting-started/authentication/","title":"Authentication","content":" Authentication TODO\n"},{"idx":3,"href":"/terraform-provider-dcos/docs/examples/","title":"Examples","content":""},{"idx":4,"href":"/terraform-provider-dcos/docs/resources/","title":"Resources","content":""},{"idx":5,"href":"/terraform-provider-dcos/docs/data-resources/","title":"Data Resources","content":""},{"idx":6,"href":"/terraform-provider-dcos/","title":"","content":" DC/OS Provider The DC/OS provider is used to interact with workload on DC/OS(dcos.io). Its configuration is the same as for dcos-cli\nExample Usage provider \u0026#34;dcos\u0026#34; { dcos_url = \u0026#34;\u0026lt;cluster url\u0026gt;\u0026#34; user = \u0026#34;bootstrapuser\u0026#34; password = \u0026#34;\u0026lt;secret dcos password\u0026gt;\u0026#34; } resource \u0026#34;dcos_marathon_pod\u0026#34; \u0026#34;simplepod\u0026#34; { name = \u0026#34;simplepod\u0026#34; scaling { kind = \u0026#34;fixed\u0026#34; instances = 1 } container { name = \u0026#34;sleep1\u0026#34; exec { command_shell = \u0026#34;sleep 1000\u0026#34; } resources { cpus = 0.1 mem = 32 } } network { mode = \u0026#34;HOST\u0026#34; } } Authentication and Configuration The DC/OS provider is using the same config sources as the DC/OS CLI.\n Attached Cluster URL + Token URL + Username and Password Cluster Name  Attached Cluster The easiest solution is using the cluster you\u0026rsquo;re attached to with dcos cluster attach\nprovider \u0026#34;dcos\u0026#34; {} The downside with this is that the user has to make sure being connected to the expected cluster.\nCluster Name If the user has locally setup his dcos-cli with cluster setup \u0026lt;cluster url\u0026gt; The name of a cluster can be used making sure terraform is using the expected cluster. The value is the same as for dcos cluster attach\nprovider \u0026#34;dcos\u0026#34; { cluster = \u0026#34;my-dcos-production-cluster\u0026#34; } Username and Password ENTERPRISE ONLY\nThis method is using a username and password to authenticate against the DC/OS cluster. Be aware that this will not work with DC/OS Open Source.\nprovider \u0026#34;dcos\u0026#34; { dcos_url = \u0026#34;\u0026lt;cluster url\u0026gt;\u0026#34; user = \u0026#34;bootstrapuser\u0026#34; password = \u0026#34;\u0026lt;secret dcos password\u0026gt;\u0026#34; } ACS Token If you\u0026rsquo;re using open source and don\u0026rsquo;t want to use the attached cluster feature you have to specify the ACS token of a user (dcos config show core.dcos_acs_token). The token in combination with the cluster url give the dcos-provider access to your cluster.\nprovider \u0026#34;dcos\u0026#34; { dcos_url = \u0026#34;\u0026lt;cluster url\u0026gt;\u0026#34; dcos_acs_token = \u0026#34;\u0026lt;dcos_acs_token\u0026gt;\u0026#34; } Argument Reference  dcos_acs_token The DC/OS access token ssl_verify Verify SSL connection. Can be set to false to ignore certificate errors. (Default: true) dcos_url The cluster URL. The same URL you reach the DC/OS UI cluster The cluster name configured in dcos-cli. dcos cluster list user ENTERPRISE ONLY The username to be used to connect to the DC/OS cluster. password ENTERPRISE ONLY The password to be used to connect to the DC/OS cluster.  "},{"idx":7,"href":"/terraform-provider-dcos/categories/","title":"Categories","content":""},{"idx":8,"href":"/terraform-provider-dcos/docs/","title":"Docs","content":""},{"idx":9,"href":"/terraform-provider-dcos/tags/","title":"Tags","content":""}];window.bookSearch={pages:pages,idx:lunr(function(){this.ref("idx");this.field("title");this.field("content");pages.forEach(this.add,this);}),}})();